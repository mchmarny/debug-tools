name: Image build/release with SLSA provenance and SBOM cosign attestation

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 3 * * 1" # Every Mon at 03:00 UTC
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest

    permissions:
      packages: write   # Allow pushing images to GHCR
      id-token: write  # enable OIDC keyless signing
      contents: read

    env:
      IMAGE: ghcr.io/${{ github.repository }}
      TAG: ${{ github.sha }}
      SBOM_FORMAT: cyclonedx-json
      SBOM_FILE: sbom.json
      ATTEST_FORMAT: cyclonedx

    steps:
      - name: Checkout source
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          fetch-depth: 1

      - name: Set up Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435  # v3.11.1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Set up Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435  # v3.11.1

      - name: Log in to GHCR
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772  # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.REG_PUSH_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Build & Push Image
        id: build
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83  # v6.18.0
        with:
          context: .
          file: tools.docker
          platforms: linux/amd64,linux/arm64
          push: true
          provenance: mode=max
          sbom: true
          tags: |
            ${{ env.IMAGE }}:latest
            ${{ env.IMAGE }}:${{ env.TAG }}

      - name: Save Image Digest
        run: echo "${{ steps.build.outputs.digest }}" > .digest

      - name: Install Cosign
        uses: sigstore/cosign-installer@398d4b0eeef1380460a10c8013a76f728fb906ac  # v3.9.1

      - name: Cosign Keyless Sign
        run: |
          IMAGE_WITH_DIGEST="${{ env.IMAGE }}@${{ steps.build.outputs.digest }}"
          cosign sign --yes "$IMAGE_WITH_DIGEST"

      - name: Verify SLSA Provenance
        run: |
          set -euo pipefail
          IMAGE_WITH_DIGEST="${{ env.IMAGE }}@${{ steps.build.outputs.digest }}"
          CERT_IDENTITY="https://github.com/${GITHUB_REPOSITORY}/github-actions"
          echo "Verifying $IMAGE_WITH_DIGEST with $CERT_IDENTITY"
          cosign verify-attestation \
            --type slsaprovenance \
            --certificate-identity "$CERT_IDENTITY" \
            --certificate-oidc-issuer "https://token.actions.githubusercontent.com" \
            "$IMAGE_WITH_DIGEST" \
            | jq -r '.payload | @base64d | fromjson' > slsa-provenance.json

      - name: Upload SBOM & Provenance Artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # v4.6.2
        with:
          name: sbom-and-provenance
          if-no-files-found: error
          path: |
            slsa-provenance.json
