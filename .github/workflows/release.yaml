name: Image build/release with SLSA provenance and SBOM cosign attestation

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 3 * * 1" # Every Mon at 03:00 UTC
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest

    permissions:
      packages: write   # Allow pushing images to GHCR
      id-token: write  # enable OIDC keyless signing
      contents: read

    env:
      IMAGE: ghcr.io/${{ github.repository }}
      IMAGE_NAME: ${{ github.repository }}
      TAG: ${{ github.sha }}
      DESCRIPTION: "Small container image with common network, storage, kernel, k8s debug tools."

    steps:
      - name: Checkout source
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          fetch-depth: 1

      - name: Set up Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435  # v3.11.1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Set up Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435  # v3.11.1

      - name: Log in to GHCR
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772  # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.REG_PUSH_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Extract image metadata
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804  # v5.7.0
        with:
          images: ${{ env.IMAGE_NAME }}
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index

      - name: Build & Push Image
        id: build
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83  # v6.18.0
        with:
          context: .
          file: tools.docker
          platforms: linux/amd64,linux/arm64
          push: true
          sbom: true
          provenance: mode=max
          annotations: |
            org.opencontainers.image.description="${{ env.DESCRIPTION }}"
            ${{ steps.meta.outputs.annotations }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: |
            ${{ env.IMAGE }}:latest
            ${{ env.IMAGE }}:${{ env.TAG }}
